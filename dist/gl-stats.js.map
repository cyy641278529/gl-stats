{"version":3,"file":"gl-stats.js","sources":["../lib/gl-bind.js","../index.js"],"sourcesContent":["let glifuncs = {\n  // default(original, name, ...args) {\n  //   // this.__gli.callStack.push(name, args);\n  //   // this.__gli.histogram.add(name);\n  //   let ret = original.apply(this, args);\n  //   // this.__gli.callStack.update(name);\n  //   return ret;\n  // },\n\n  drawArrays (original, name, ...args) {\n    ++this.__gli.totalDrawArraysCalls;\n    return original.apply(this, args);\n  },\n\n  drawElements (original, name, ...args) {\n    ++this.__gli.totalDrawElementsCalls;\n    return original.apply(this, args);\n  },\n};\n\nfunction _gliBind(name, origFn, newFn) {\n  return function () {\n    return newFn.apply(this, [origFn, name, ...arguments]);\n  };\n}\n\nexport default function bindWebGL() {\n  // DISABLE\n  // for (let name in WebGLRenderingContext.prototype) {\n  //   try {\n  //     if (typeof WebGLRenderingContext.prototype[name] !== 'function') {\n  //       continue;\n  //     }\n\n  //     let newFunc = glifuncs[name] || glifuncs.default;\n  //     WebGLRenderingContext.prototype[name] = _gliBind(name, WebGLRenderingContext.prototype[name], newFunc);\n  //   } catch (err) {\n  //     console.error(err);\n  //   }\n  // }\n\n  for (let name in glifuncs) {\n    let newFunc = glifuncs[name];\n    WebGLRenderingContext.prototype[name] = _gliBind(name, WebGLRenderingContext.prototype[name], newFunc);\n  }\n\n  WebGLRenderingContext.prototype.__inspect = function () {\n    let modules = {\n      totalDrawArraysCalls: 0,\n      totalDrawElementsCalls: 0,\n    };\n\n    // modules.bufferViewer = new glpBufferViewer(this);\n    // modules.callStack = new glpCallStack(this);\n    // modules.frameControl = new glpFrameControl(this, window);\n    // modules.duplicateProgramDetection = new glpDuplicateProgramDetection(this);\n    // modules.histogram = new glpHistogram(this);\n    // modules.messages = new glpMessages(this);\n    // modules.pixelInspector = new glpPixelInspector(this);\n    // modules.depthInspector = new glpDepthInspector(this);\n    // modules.programUsageCounter = new glpProgramUsageCounter(this);\n    // modules.stateTracker = new glpStateTracker(this);\n    // modules.textureViewer = new glpTextureViewer(this);\n    // modules.shaderViewer = new glpShaderViewer(this);\n    // modules.mipmapViewer = new glpMipmapViewer(this);\n\n    this.__gli = modules;\n    return modules;\n  };\n\n  WebGLRenderingContext.prototype.gli = function () {\n    if ( this.__gli ) {\n      return this.__gli;\n    }\n    return this.__inspect();\n  };\n}","import bindWebGL from './lib/gl-bind';\n\nbindWebGL();\n\nexport default class GLStats {\n  costructor(dom, opts = {}) {\n    // TODO\n  }\n}"],"names":[],"mappings":";;;;;;;;;AAAA,IAAI,QAAQ,GAAG;;;;;;;;;EASb,UAAU,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,EAAE;IACnC,EAAE,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC;IAClC,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;GACnC;;EAED,YAAY,CAAC,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI,EAAE;IACrC,EAAE,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;IACpC,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;GACnC;CACF,CAAC;;AAEF,SAAS,QAAQ,CAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE;EACrC,OAAO,YAAY;IACjB,OAAO,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC,CAAC,CAAC;GACxD,CAAC;CACH;;AAED,AAAe,SAAS,SAAS,GAAG;;;;;;;;;;;;;;;EAelC,KAAK,IAAI,IAAI,IAAI,QAAQ,EAAE;IACzB,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC7B,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,IAAI,EAAE,qBAAqB,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,CAAC;GACxG;;EAED,qBAAqB,CAAC,SAAS,CAAC,SAAS,GAAG,YAAY;IACtD,IAAI,OAAO,GAAG;MACZ,oBAAoB,EAAE,CAAC;MACvB,sBAAsB,EAAE,CAAC;KAC1B,CAAC;;;;;;;;;;;;;;;;IAgBF,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;IACrB,OAAO,OAAO,CAAC;GAChB,CAAC;;EAEF,qBAAqB,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY;IAChD,KAAK,IAAI,CAAC,KAAK,GAAG;MAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;GACzB,CAAC;;;ACzEJ,SAAS,EAAE,CAAC;;AAEZ,AAAe,MAAM,OAAO,CAAC;EAC3B,UAAU,CAAC,GAAG,EAAE,IAAI,GAAG,EAAE,EAAE;;GAE1B;,;;"}